jenkins:
    # Authorization: Disable all anonymous access
    authorizationStrategy:
        globalMatrix:
            entries:
                # Admin user permissions - full control
                - user:
                    name: "${JENKINS_ADMIN_ID:-admin}"
                    permissions:
                        - "Overall/Administer"

                # Pipeline service account permissions - limited to job execution
                - user:
                    name: "${JENKINS_PIPELINE_ID:-pipeline}"
                    permissions:
                        - "Overall/Read"
                        - "Job/Build"
                        - "Job/Cancel"
                        - "Job/Read"
                        - "Job/Workspace"
                        - "Run/Replay"
                        - "Run/Update"
                        - "View/Read"

                # General authenticated users permissions - read-only
                - group:
                    name: "authenticated"
                    permissions:
                        - "Overall/Read"
                        - "Job/Read"
                        - "View/Read"
                # Explicitly NO permissions for anonymous users
                # Anonymous users will be redirected to login

    # Security Realm: Local user database
    securityRealm:
        local:
            allowsSignup: false # Prevent self-registration
            enableCaptcha: false
            users:
                - id: "${JENKINS_ADMIN_ID:-admin}"
                  password: "${JENKINS_ADMIN_PASSWORD:-admin}" # Set via environment variable
                  properties:
                      - mailer:
                            emailAddress: "${JENKINS_ADMIN_EMAIL:-admin@example.com}"
                - id: "${JENKINS_PIPELINE_ID:-pipeline}"
                  password: "${JENKINS_PIPELINE_PASSWORD:-pipeline123}" # Service account for pipeline execution
                  properties:
                      - mailer:
                            emailAddress: "${JENKINS_PIPELINE_EMAIL:-pipeline@example.com}"

    # Additional security settings
    remotingSecurity:
        enabled: true

    # CSRF Protection
    crumbIssuer:
        standard:
            excludeClientIPFromCrumb: false

    # Disable agent to master access control - replaces CLI setting
    slaveAgentPort: 50000

unclassified:
    location:
        url: "http://localhost:8080/"
        adminAddress: "${JENKINS_ADMIN_EMAIL:-admin@example.com}"

    # Audit Trail Configuration
    audit-trail:
        pattern: ".*/(?:configure|build|delete|save|create).*"
        logBuildCause: true
        logCredentialsUsage: true
        logScriptUsage: true
        displayUserName: true
        loggers:
            - logFile:
                log: "/var/jenkins_home/logs/audit.log"
                limit: 10
                count: 5

    # Global default build discard configuration
    buildDiscarders:
        configuredBuildDiscarders:
            - "jobBuildDiscarder"
            - simpleBuildDiscarder:
                discarder:
                    logRotator:
                        daysToKeepStr: "30"
                        numToKeepStr: "20"
                        artifactDaysToKeepStr: "14"
                        artifactNumToKeepStr: "10"

    # Timestamper configuration
    timestamper:
        allPipelines: true
        systemTimeFormat: "yyyy-MM-dd HH:mm:ss"

    # Pipeline Stage View configuration
    globalDefaultFlowDurabilityLevel:
        durabilityHint: PERFORMANCE_OPTIMIZED

security:
    # API Token settings
    apiToken:
        creationOfLegacyTokenEnabled: false
        tokenGenerationOnCreationEnabled: false
        usageStatisticsEnabled: true

jobs:
    - script: >
          pipelineJob('21979741_Project2_pipeline') {
            description('Pipeline for AWS Elastic Beanstalk Express.js Sample Application')

            // Keep only recent builds
            logRotator {
              daysToKeep(30)
              numToKeep(20)
              artifactDaysToKeep(14)
              artifactNumToKeep(10)
            }

            // Pipeline definition from repository's Jenkinsfile
            definition {
              cpsScm {
                scm {
                  git {
                    remote {
                      url('https://github.com/endigo/aws-elastic-beanstalk-express-js-sample.git')
                    }
                    branch('*/main')
                  }
                }
                scriptPath('Jenkinsfile')  // Use the existing Jenkinsfile from the repo
                lightweight(false)
              }
            }
          }

credentials:
    system:
        domainCredentials:
            - credentials:
                  # Snyk API token for security scanning
                  - string:
                        scope: GLOBAL
                        id: "snyk-api-token"
                        secret: "${SNYK_API_TOKEN:-dummy-token}"
                        description: "Snyk API token for security scanning"
                  # Docker Hub credentials
                  - usernamePassword:
                        scope: GLOBAL
                        id: "docker-hub-credentials"
                        username: "${DOCKER_HUB_USERNAME:-dummy}"
                        password: "${DOCKER_HUB_PASSWORD:-dummy}"
                        description: "Docker Hub credentials"
